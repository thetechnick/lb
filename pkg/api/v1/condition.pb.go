/*
Copyright 2019 The LB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: condition.proto

package v1

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Condition_Status int32

const (
	Condition_Unknown Condition_Status = 0
	Condition_True    Condition_Status = 1
	Condition_False   Condition_Status = 2
)

var Condition_Status_name = map[int32]string{
	0: "Unknown",
	1: "True",
	2: "False",
}

var Condition_Status_value = map[string]int32{
	"Unknown": 0,
	"True":    1,
	"False":   2,
}

func (x Condition_Status) String() string {
	return proto.EnumName(Condition_Status_name, int32(x))
}

func (Condition_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02a70b272fae186f, []int{0, 0}
}

type Condition struct {
	Type                 string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Status               Condition_Status     `protobuf:"varint,2,opt,name=status,proto3,enum=lb.api.v1.Condition_Status" json:"status,omitempty"`
	Reason               string               `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	LastTransitionTime   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=lastTransitionTime,proto3" json:"lastTransitionTime,omitempty"`
	Message              string               `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Condition) Reset()         { *m = Condition{} }
func (m *Condition) String() string { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()    {}
func (*Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a70b272fae186f, []int{0}
}

func (m *Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition.Unmarshal(m, b)
}
func (m *Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition.Marshal(b, m, deterministic)
}
func (m *Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition.Merge(m, src)
}
func (m *Condition) XXX_Size() int {
	return xxx_messageInfo_Condition.Size(m)
}
func (m *Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Condition proto.InternalMessageInfo

func (m *Condition) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Condition) GetStatus() Condition_Status {
	if m != nil {
		return m.Status
	}
	return Condition_Unknown
}

func (m *Condition) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Condition) GetLastTransitionTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastTransitionTime
	}
	return nil
}

func (m *Condition) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("lb.api.v1.Condition_Status", Condition_Status_name, Condition_Status_value)
	proto.RegisterType((*Condition)(nil), "lb.api.v1.Condition")
}

func init() { proto.RegisterFile("condition.proto", fileDescriptor_02a70b272fae186f) }

var fileDescriptor_02a70b272fae186f = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8e, 0x31, 0x4f, 0xf3, 0x30,
	0x10, 0x86, 0x3f, 0xe7, 0x4b, 0x53, 0x72, 0x95, 0x20, 0xba, 0x01, 0x59, 0x65, 0x20, 0xea, 0x14,
	0x31, 0xb8, 0x6a, 0xfb, 0x0f, 0x40, 0x62, 0x60, 0x0c, 0x61, 0x61, 0x73, 0xe0, 0x88, 0x2c, 0x12,
	0x3b, 0xca, 0x39, 0x45, 0xfc, 0x79, 0x84, 0xe4, 0x34, 0x9d, 0xd8, 0x7c, 0xf2, 0xfb, 0xbc, 0xef,
	0x03, 0x57, 0x6f, 0xce, 0xbe, 0x1b, 0x6f, 0x9c, 0x55, 0xfd, 0xe0, 0xbc, 0xc3, 0xb4, 0xad, 0x95,
	0xee, 0x8d, 0x3a, 0xee, 0xd6, 0xb7, 0x8d, 0x73, 0x4d, 0x4b, 0xdb, 0xf0, 0x51, 0x8f, 0x1f, 0x5b,
	0x6f, 0x3a, 0x62, 0xaf, 0xbb, 0x7e, 0xca, 0x6e, 0x7e, 0x04, 0xa4, 0x0f, 0x33, 0x8f, 0x08, 0xb1,
	0xff, 0xee, 0x49, 0x8a, 0x5c, 0x14, 0x69, 0x19, 0xde, 0x78, 0x80, 0x84, 0xbd, 0xf6, 0x23, 0xcb,
	0x28, 0x17, 0xc5, 0xe5, 0xfe, 0x46, 0x9d, 0xeb, 0xd5, 0x99, 0x54, 0xcf, 0x21, 0x52, 0x9e, 0xa2,
	0x78, 0x0d, 0xc9, 0x40, 0x9a, 0x9d, 0x95, 0xff, 0x43, 0xd5, 0xe9, 0xc2, 0x27, 0xc0, 0x56, 0xb3,
	0xaf, 0x06, 0x6d, 0x39, 0x80, 0x95, 0xe9, 0x48, 0xc6, 0xb9, 0x28, 0x56, 0xfb, 0xb5, 0x9a, 0x64,
	0xd5, 0x2c, 0xab, 0xaa, 0x59, 0xb6, 0xfc, 0x83, 0x42, 0x09, 0xcb, 0x8e, 0x98, 0x75, 0x43, 0x72,
	0x11, 0x46, 0xe6, 0x73, 0x73, 0x07, 0xc9, 0xe4, 0x83, 0x2b, 0x58, 0xbe, 0xd8, 0x4f, 0xeb, 0xbe,
	0x6c, 0xf6, 0x0f, 0x2f, 0x20, 0xae, 0x86, 0x91, 0x32, 0x81, 0x29, 0x2c, 0x1e, 0x75, 0xcb, 0x94,
	0x45, 0xf7, 0xf1, 0x6b, 0x74, 0xdc, 0xd5, 0x49, 0xd8, 0x3c, 0xfc, 0x06, 0x00, 0x00, 0xff, 0xff,
	0xe2, 0xa0, 0xf5, 0xa1, 0x4c, 0x01, 0x00, 0x00,
}
